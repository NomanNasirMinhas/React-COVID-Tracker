{"version":3,"sources":["Components/StatsView.js","Components/Countries.js","Components/RadarData.js","Components/Visual.js","Components/InfoPanel.js","Components/Navbar.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["useStyles","makeStyles","theme","root","maxWidth","margin","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","backgroundColor","title","textTransform","data","StatsView","useState","globalData","setGlobalData","useEffect","a","fetch","response","json","results","source","getData","classes","className","Grid","container","Object","keys","map","key","ind","item","xs","sm","Paper","elevation","replace","width","subHead","countData","setCountData","values","countryitems","console","log","total_cases","total_active_cases","total_deaths","indicator1","height","display","indicator2","indicator3","RadarData","countName","countCases","countActive","countDeaths","forEach","index","push","data1","labels","slice","datasets","label","data2","data3","data4","data5","data6","data7","data8","data9","Visual","InfoPanel","currentScreen","flexGrow","menuButton","marginRight","button","HomeIcon","props","SvgIcon","d","ButtonAppBar","screenType","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","Button","App","setScreenType","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.97c04245.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 1000,\r\n        margin: '0 auto',\r\n        marginTop: 50\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor: \"#E0FBFE\"\r\n    },\r\n\r\n    title: {\r\n        color: '#3f51b5',\r\n        textTransform: 'capitalize'\r\n    },\r\n\r\n    data:{\r\n        color: \"black\",\r\n    },\r\n\r\n\r\n}));\r\n\r\nexport default function StatsView() {\r\n    const [globalData, setGlobalData] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const response = await fetch(\"https://api.thevirustracker.com/free-api?global=stats\");\r\n            let data = await response.json();\r\n            delete data.results[0].source;\r\n            setGlobalData(data.results[0]);\r\n        }\r\n        getData();\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <h1>Corona Global Stats</h1>\r\n            <Grid container spacing={3}>\r\n                {Object.keys(globalData).map((key, ind) => {\r\n                    return (\r\n                        <Grid item xs={12} sm={4} key={ind}>\r\n                            <Paper\r\n                                className={classes.paper}\r\n                                elevation={3}>\r\n                                    <h3 className={classes.title}>\r\n                                        {key.replace(/_/g,' ')}\r\n                                    </h3>\r\n                                    <h3 className={classes.data}>{globalData[key]}</h3>\r\n                            </Paper>\r\n                        </Grid>\r\n                    )\r\n                })}\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1000,\r\n    margin: \"0 auto\",\r\n    marginTop: 50,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    margin: 10,\r\n    width: 200,\r\n  },\r\n\r\n  title: {\r\n    color: \"#3f51b5\",\r\n    textTransform: \"capitalize\",\r\n  },\r\n\r\n  data: {\r\n    color: \"#429DCE\",\r\n    margin: 10,\r\n  },\r\n\r\n  subHead: {\r\n    color: \"lightblue\",\r\n  },\r\n}));\r\n\r\nexport default function StatsView() {\r\n  const [countData, setCountData] = useState([{}]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const response = await fetch(\r\n        \"https://api.thevirustracker.com/free-api?countryTotals=ALL\"\r\n      );\r\n      let data = await response.json();\r\n\r\n      setCountData(Object.values(Object.values(data.countryitems)[0]));\r\n      console.log(Object.values(Object.values(data.countryitems)[0]));\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Corona Countries Stats</h1>\r\n      <Grid container spacing={3}>\r\n        {countData.map((key, ind) => {\r\n          return (\r\n            <Paper className={classes.paper} elevation={3}>\r\n              <h2 className={classes.title}>{countData[ind].title}</h2>\r\n\r\n              <h4 className={classes.data}>\r\n                Total Cases = {countData[ind].total_cases}\r\n              </h4>\r\n\r\n              <h4 className={classes.data}>\r\n                Total Active Cases ={countData[ind].total_active_cases}\r\n              </h4>\r\n\r\n              <h4 className={classes.data}>\r\n                Total Deaths ={countData[ind].total_deaths}\r\n              </h4>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Radar, Pie} from 'react-chartjs-2';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1000,\r\n    margin: \"0 auto\",\r\n    marginTop: 50,\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    margin: \"10\",\r\n\r\n  },\r\n\r\n  indicator1:{\r\n    height: 15,\r\n    width: 100,\r\n    backgroundColor: \"rgba(6, 115, 62,1)\",\r\n    display: \"flex\",\r\n  },\r\n  indicator2:{\r\n    height: 15,\r\n    width: 100,\r\n    backgroundColor: \"rgba(21, 120, 232)\",\r\n    display: \"flex\",\r\n  },\r\n  indicator3:{\r\n    height: 15,\r\n    width: 100,\r\n    backgroundColor: \"rgba(187, 0, 0)\",\r\n    display: \"flex\",\r\n  }\r\n}));\r\n\r\nexport default function RadarData(){\r\n//   displayName: 'RadarExample',\r\n\r\nconst [countData, setCountData] = useState([{}]);\r\n\r\nuseEffect(() => {\r\n  async function getData() {\r\n    const response = await fetch(\r\n      \"https://api.thevirustracker.com/free-api?countryTotals=ALL\"\r\n    );\r\n    let data = await response.json();\r\n\r\n    setCountData(Object.values(Object.values(data.countryitems)[0]));\r\n    console.log(Object.values(Object.values(data.countryitems)[0]));\r\n  }\r\n  getData();\r\n}, []);\r\n\r\n  const countName = [];\r\n  const countCases = [];\r\n  const countActive = [];\r\n  const countDeaths = [];\r\n\r\n  countData.forEach((item, index)=>{\r\n    //console.log(countData[index].title);\r\n    if(countData[index].title != null)\r\n    {\r\n      countName.push(countData[index].title);\r\n      countCases.push(countData[index].total_cases);\r\n      countActive.push(countData[index].total_active_cases);\r\n      countDeaths.push(countData[index].total_deaths);\r\n    }\r\n\r\n  });\r\n\r\nconst data = {\r\n  labels: countName,\r\n  datasets: [\r\n    {\r\n      label: 'Total Cases',\r\n      backgroundColor: 'rgba(6, 115, 62)',\r\n      borderColor: 'rgba(6, 115, 62,1)',\r\n      pointBackgroundColor: 'rgba(6, 115, 62,1)',\r\n      pointBorderColor: '#fff',\r\n      pointHoverBackgroundColor: '#fff',\r\n      pointHoverBorderColor: 'rgba(6, 115, 62,1)',\r\n      data: countCases\r\n    },\r\n    {\r\n      label: 'Active Cases',\r\n      backgroundColor: 'rgba(21, 120, 232)',\r\n      borderColor: 'rgba(21, 120, 232,1)',\r\n      pointBackgroundColor: 'rgba(21, 120, 232,1)',\r\n      pointBorderColor: '#fff',\r\n      pointHoverBackgroundColor: '#fff',\r\n      pointHoverBorderColor: 'rgba(21, 120, 232,1)',\r\n      data: countActive\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      backgroundColor: 'rgba(187, 0, 0)',\r\n      borderColor: 'rgba(187, 0, 0,1)',\r\n      pointBackgroundColor: 'rgba(187, 0, 0,1)',\r\n      pointBorderColor: '#fff',\r\n      pointHoverBackgroundColor: '#fff',\r\n      pointHoverBorderColor: 'rgba(187, 0, 0,1)',\r\n      data: countDeaths\r\n    }\r\n  ]\r\n};\r\n\r\nconst data1 = {\r\n  labels: countName.slice(0, 21),\r\n  datasets: [\r\n    {\r\n      label: 'Total Cases',\r\n      backgroundColor: 'rgba(6, 115, 62)',\r\n      data: countCases.slice(0, 21)\r\n    },\r\n    {\r\n      label: 'Active Cases',\r\n      backgroundColor: 'rgba(21, 120, 232)',\r\n      data: countActive.slice(0, 21)\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      backgroundColor: 'rgba(187, 0, 0)',\r\n      data: countDeaths.slice(0, 21)\r\n    }\r\n  ]\r\n};\r\n\r\nconst data2 = {\r\n  labels: countName.slice(21, 41),\r\n  datasets: [\r\n    {\r\n      label: 'Total Cases',\r\n      backgroundColor: 'rgba(6, 115, 62)',\r\n      data: countCases.slice(21, 41)\r\n    },\r\n    {\r\n      label: 'Active Cases',\r\n      backgroundColor: 'rgba(21, 120, 232)',\r\n      data: countActive.slice(21, 41)\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      backgroundColor: 'rgba(187, 0, 0)',\r\n      data: countDeaths.slice(21, 41)\r\n    }\r\n  ]\r\n};\r\n\r\nconst data3 = {\r\n  labels: countName.slice(41, 61),\r\n  datasets: [\r\n    {\r\n      label: 'Total Cases',\r\n      backgroundColor: 'rgba(6, 115, 62)',\r\n      data: countCases.slice(41, 61)\r\n    },\r\n    {\r\n      label: 'Active Cases',\r\n      backgroundColor: 'rgba(21, 120, 232)',\r\n      data: countActive.slice(41, 61)\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      backgroundColor: 'rgba(187, 0, 0)',\r\n      data: countDeaths.slice(41, 61)\r\n    }\r\n  ]\r\n};\r\n\r\nconst data4 = {\r\n  labels: countName.slice(61, 81),\r\n  datasets: [\r\n    {\r\n      label: 'Total Cases',\r\n      backgroundColor: 'rgba(6, 115, 62)',\r\n      data: countCases.slice(61, 81)\r\n    },\r\n    {\r\n      label: 'Active Cases',\r\n      backgroundColor: 'rgba(21, 120, 232)',\r\n      data: countActive.slice(61, 81)\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      backgroundColor: 'rgba(187, 0, 0)',\r\n      data: countDeaths.slice(61, 81)\r\n    }\r\n  ]\r\n};\r\n\r\nconst data5 = {\r\n  labels: countName.slice(81, 101),\r\n  datasets: [\r\n    {\r\n      label: 'Total Cases',\r\n      backgroundColor: 'rgba(6, 115, 62)',\r\n      data: countCases.slice(81, 101)\r\n    },\r\n    {\r\n      label: 'Active Cases',\r\n      backgroundColor: 'rgba(21, 120, 232)',\r\n      data: countActive.slice(81, 101)\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      backgroundColor: 'rgba(187, 0, 0)',\r\n      data: countDeaths.slice(81, 101)\r\n    }\r\n  ]\r\n};\r\n\r\nconst data6 = {\r\n  labels: countName.slice(101, 121),\r\n  datasets: [\r\n    {\r\n      label: 'Total Cases',\r\n      backgroundColor: 'rgba(6, 115, 62)',\r\n      data: countCases.slice(101, 121)\r\n    },\r\n    {\r\n      label: 'Active Cases',\r\n      backgroundColor: 'rgba(21, 120, 232)',\r\n      data: countActive.slice(101, 121)\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      backgroundColor: 'rgba(187, 0, 0)',\r\n      data: countDeaths.slice(101, 121)\r\n    }\r\n  ]\r\n};\r\n\r\nconst data7 = {\r\n  labels: countName.slice(121, 141),\r\n  datasets: [\r\n    {\r\n      label: 'Total Cases',\r\n      backgroundColor: 'rgba(6, 115, 62)',\r\n      data: countCases.slice(121, 141)\r\n    },\r\n    {\r\n      label: 'Active Cases',\r\n      backgroundColor: 'rgba(21, 120, 232)',\r\n      data: countActive.slice(121, 141)\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      backgroundColor: 'rgba(187, 0, 0)',\r\n      data: countDeaths.slice(121, 141)\r\n    }\r\n  ]\r\n};\r\n\r\nconst data8 = {\r\n  labels: countName.slice(141, 161),\r\n  datasets: [\r\n    {\r\n      label: 'Total Cases',\r\n      backgroundColor: 'rgba(6, 115, 62)',\r\n      data: countCases.slice(141, 161)\r\n    },\r\n    {\r\n      label: 'Active Cases',\r\n      backgroundColor: 'rgba(21, 120, 232)',\r\n      data: countActive.slice(141, 161)\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      backgroundColor: 'rgba(187, 0, 0)',\r\n      data: countDeaths.slice(141, 161)\r\n    }\r\n  ]\r\n};\r\n\r\nconst data9 = {\r\n  labels: countName.slice(161, 184),\r\n  datasets: [\r\n    {\r\n      label: 'Total Cases',\r\n      backgroundColor: 'rgba(6, 115, 62)',\r\n      data: countCases.slice(161, 184)\r\n    },\r\n    {\r\n      label: 'Active Cases',\r\n      backgroundColor: 'rgba(21, 120, 232)',\r\n      data: countActive.slice(161, 184)\r\n    },\r\n    {\r\n      label: 'Total Deaths',\r\n      backgroundColor: 'rgba(187, 0, 0)',\r\n      data: countDeaths.slice(161, 184)\r\n    }\r\n  ]\r\n};\r\n\r\nconst classes = useStyles();\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <h2>Corona Cases Country-viz</h2>\r\n        <Grid container spacing={2}>\r\n        <Grid item xs={4}>\r\n          <div className={classes.indicator1}></div>\r\n          <h6>Total Cases</h6>\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <div className={classes.indicator2}></div>\r\n          <h6>Total Active Cases</h6>\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <div className={classes.indicator3}></div>\r\n          <h6>Total Deaths</h6>\r\n        </Grid>\r\n\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}><Pie data={data1} /></Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}><Pie data={data2}/></Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}><Pie data={data3}/></Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}><Pie data={data4}/></Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}><Pie data={data5}/></Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}><Pie data={data6}/></Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}><Pie data={data7}/></Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}><Pie data={data8}/></Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}><Pie data={data9}/></Paper>\r\n        </Grid>\r\n\r\n        </Grid>\r\n\r\n      </div>\r\n    );\r\n}","import React from 'react';\r\nimport RadarData from './RadarData';\r\n\r\nfunction Visual() {\r\n    return (\r\n        <RadarData />\r\n    );\r\n  }\r\n\r\n  export default Visual;","import React from \"react\";\r\nimport GlobalStats from \"./StatsView\";\r\nimport AllCountries from \"./Countries\";\r\nimport Visual from \"./Visual\";\r\n\r\nexport default function InfoPanel({ currentScreen }) {\r\n  if (currentScreen === 0) return <GlobalStats />;\r\n  else if (currentScreen === 1) return <AllCountries />;\r\n  else if (currentScreen === 2) return <Visual />;\r\n  else return <GlobalStats />;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {},\r\n}));\r\n\r\nfunction HomeIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default function ButtonAppBar({screenType}) {\r\n  const classes = useStyles();\r\n\r\n  //const [screenType, setScreenType] = useState(0);\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => {\r\n              screenType(0);\r\n              console.log(screenType);\r\n            }}\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            PIAIC Covid-19 Tracker\r\n          </Typography>\r\n          <Button\r\n            color=\"inherit\"\r\n            className={classes.button}\r\n            onClick={() => {\r\n              screenType(1);\r\n              console.log(screenType);\r\n            }}\r\n          >\r\n            Countries List\r\n          </Button>\r\n          <Button\r\n            color=\"inherit\"\r\n            className={classes.button}\r\n            onClick={() => {\r\n              screenType(2);\r\n              console.log(screenType);\r\n            }}\r\n          >\r\n            Visualization\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport InfoPanel from './Components/InfoPanel';\nimport StatsView from './Components/StatsView';\nimport Navbar from './Components/Navbar';\n\n\nfunction App() {\n  const [screenType, setScreenType] = useState(0);\n  return (\n    <div className=\"App\">\n        <Navbar screenType={setScreenType}/>\n        <InfoPanel currentScreen={screenType}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}